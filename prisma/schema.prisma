generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  title     String
  desc      String?
  slug      String    @unique
  products  Product[]
}

model Product {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  title      String
  desc       String?
  slug       String   @unique
  image      String
  price      Decimal
  isFeatured Boolean  @default(false)
  options    Json[]
  catSlug    String

  category Category @relation(fields: [catSlug], references: [slug])
}

model Order {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  price     Decimal
  products  Json[]
  status    String
}

model User {
  id             String     @id @default(cuid())
  username       String     @unique
  email          String     @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  hashedPassword String
  image          String?
  isAdmin        Boolean    @default(false)
  accounts       Accounts[]
  sessions       Session[]
}

model Accounts {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String   @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
